name: Deploy NihongoBot

on:
    push:
        branches:
            - main  # Trigger on push to main
    workflow_dispatch:

jobs:
    build:
        runs-on: self-hosted

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.0.x

        - name: Install LibMan CLI
          run: |
                dotnet tool update -g Microsoft.Web.LibraryManager.Cli || dotnet tool install -g Microsoft.Web.LibraryManager.Cli
                echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

        - name: Install Aspirate Tool
          run: dotnet tool install -g aspirate --prerelease

        - name: Replace Variables in appsettings.json
          uses: im-open/variable-substitution@v2
          with:
              files: '*/appsettings.json'
          env:
              ApplicationOptions.TelegramBotToken: ${{ secrets.TELEGRAM_BOT_TOKEN }}

        - name: Restore client libraries (LibMan)
          working-directory: NihongoBot.Client
          run: libman restore

        - name: Build the Project
          run: dotnet build

        - name: Run Tests
          run: dotnet test

        - name: Upload source code for deployment
          uses: actions/upload-artifact@v4
          with:
            name: deployment-artifacts
            path: |
              .
              !.git
              !Tests
              !.vscode
              !*.md
            retention-days: 1

    deploy:
        needs: build
        runs-on: self-hosted
        environment: production

        steps:
        - name: Download source code
          uses: actions/download-artifact@v4
          with:
            name: deployment-artifacts
            path: ./deployment

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 9.0.x

        - name: Install Aspirate Tool
          run: dotnet tool install -g aspirate --prerelease

        - name: Generate Compose File
          working-directory: ./deployment/NihongoBot.AppHost
          run: aspirate generate --output-format compose --non-interactive --include-dashboard --secret-password ${{ secrets.ASPIRATE_SECRET_PASSWORD }}

        - name: Copy Docker Compose File
          run: cp ./deployment/NihongoBot.AppHost/aspirate-output/docker-compose.yaml /home/dennis/nihongoBot

        - name: Restart NihongoBot Container
          run: |
                cd /home/dennis/nihongoBot
                docker compose down
                docker compose up -d
